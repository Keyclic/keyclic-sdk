{{>header}}
import 'dart:async';
import 'dart:convert';
import 'package:{{pubName}}/auth/auth.dart';
import 'package:dio/dio.dart';

class BasicAuthInfo {
    const BasicAuthInfo(this.username, this.password);

    final String username;
    final String password;
}

class BasicAuthInterceptor extends AuthInterceptor {
    Map<String, BasicAuthInfo> authInfo = {};

    @override
    Future<dynamic> onRequest(RequestOptions options) {
        final List<Map<String, dynamic>> metadataAuthInfo = getAuthInfo(options, 'basic');
        for (final Map<String, dynamic> info in metadataAuthInfo) {
            final String authName = info['name'] as String;
            final basicAuthInfo = authInfo[authName];

            if (basicAuthInfo == null) {
                continue;
            }

            final basicAuth = 'Basic ' + base64Encode(utf8.encode('${basicAuthInfo.username}:${basicAuthInfo.password}'));
            options.headers['Authorization'] = basicAuth;
            break;
        }

        return super.onRequest(options);
    }
}
