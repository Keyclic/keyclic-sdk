{{>header}}
library {{pubName}}.api;

import 'package:dio/dio.dart';
import 'package:built_value/serializer.dart';
import 'package:{{pubName}}/serializers.dart';
import 'package:{{pubName}}/auth/api_key_auth.dart';
import 'package:{{pubName}}/auth/basic_auth.dart';
import 'package:{{pubName}}/auth/oauth.dart';
{{#apiInfo}}{{#apis}}import 'package:{{pubName}}/api/{{classFilename}}.dart';
{{/apis}}{{/apiInfo}}

final _defaultInterceptors = [OAuthInterceptor(), BasicAuthInterceptor(), ApiKeyAuthInterceptor()];

class {{clientName}} {
    {{clientName}}({
        this.dio,
        Serializers serializers,
        String basePath, List<Interceptor> interceptors
    }) {
      if (dio == null) {
          final BaseOptions options = new BaseOptions(
              baseUrl: basePath ?? this.basePath,
              connectTimeout: 5000,
              receiveTimeout: 3000,
          );
          dio = Dio(options);
      }

      dio.interceptors.addAll(interceptors ?? _defaultInterceptors);
      this.serializers = serializers ?? standardSerializers;
    }

    Dio dio;
    Serializers serializers;
    String basePath = '{{{basePath}}}';

    void setOAuthToken(String name, String token) {
        (dio.interceptors.firstWhere((element) => element is OAuthInterceptor, orElse: () => null) as OAuthInterceptor)?.tokens[name] = token;
    }

    void setBasicAuth(String name, String username, String password) {
        (dio.interceptors.firstWhere((element) => element is BasicAuthInterceptor, orElse: () => null) as BasicAuthInterceptor)?.authInfo[name] = BasicAuthInfo(username, password);
    }

    void setApiKey(String name, String apiKey) {
        (dio.interceptors.firstWhere((element) => element is ApiKeyAuthInterceptor, orElse: () => null) as ApiKeyAuthInterceptor)?.apiKeys[name] = apiKey;
    }

{{#apiInfo}}{{#apis}}
    /// Get {{classname}} instance, base route and serializer can be overridden by a given but be careful,
    /// by doing that all interceptors will not be executed.
    {{classname}} get{{classname}}() {
        return {{classname}}(dio, serializers);
    }

{{/apis}}{{/apiInfo}}
}
